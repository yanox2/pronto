<?php
/* Copyright 2013 dodat */
/*---------------------------------------------------------------------------*
 * Class
 *      検索部品
 *---------------------------------------------------------------------------*/
namespace PR;

class Searcher{

	const PREFIX = 'prSrch_';

	private $sKeywords_ = null;
	private $aColumns_ = null;
	private $aParams_ = null;

	private $aJoinColumns_ = null;

	public function __construct($raColumns=null){
		$this->aColumns_ = $raColumns;
	}

	public function setParams($raParams){
		$this->aParams_ = $raParams;
	}

	public function addColumn($rsColumn){
		$this->aColumns_[] = $sColumn;
	}

	public function addColumnByNameTag($roNameTag){
		$this->aColumns_[] = $roNameTag->sColumn;
	}

	public function getKeywords(){
		return $this->sKeywords_;
	}

	public function setKeywords($sKeywords){
		$this->sKeywords_ = $sKeywords;
	}

	public function setJoinColumns($raColumns){
		$this->aJoinColumns_ = $raColumns;
	}

/*---------------------------------------------------------------------------*
 * Public Methods
 *---------------------------------------------------------------------------*/
	public function setDefaultItem($rsVar,$rmVal){
		$_SESSION[self::PREFIX.$rsVar] = $rmVal;
	}

	public function load(){
		if(isset($_GET['kw'])){
			$this->sKeywords_ = Misc::trim(urldecode($_GET['kw']));
		}else if(array_key_exists('kw',$this->aParams_)){
			$this->sKeywords_ = Misc::trim(urldecode($this->aParams_['kw']));
		}else if(HTTPUtil::isPost(self::PREFIX.'Keywords')){
			$this->sKeywords_ = HTTPUtil::getPostValue(self::PREFIX.'Keywords',Model::DT_TEXT);
		}else{
			$this->sKeywords_ = Misc::trim($_SESSION[self::PREFIX.'Keywords']);
		}
	}

	public function save(){
		$_SESSION[self::PREFIX.'Keywords'] = $this->sKeywords_;
	}

	public function clear(){
		unset($_SESSION[self::PREFIX.'Keywords']);
	}

	public function getSqlToken($rbCountOnly=false){
		$cols = $this->aColumns_;
		$token = '';
		if(!empty($this->sKeywords_)){
			if($cols) $token = Dao::getTokenKeywords($this->sKeywords_,$cols);
			if($this->aJoinColumns_){
				$jtoken = Dao::getTokenKeywords($this->sKeywords_,$this->aJoinColumns_);
				if($token){
					$token = '('.$token.' or '.$jtoken.')';
				}else{
					$token = '('.$jtoken.')';
				}
			}
		}
		return $token;
	}
}
?>
