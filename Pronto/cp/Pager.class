<?php
/* Copyright 2013 dodat */
/*---------------------------------------------------------------------------*
 * Class
 *      ページャ
 *---------------------------------------------------------------------------*/
namespace PR;

class Pager{

	const PREFIX = 'prPgr_';

	private $sLocation_ = null;
	private $iListNum_ = 100;
	private $iLinkNum_ = 5;
	private $aParams_ = null;

	private $iPage_ = 0;
	private $iSort_ = 0;
	private $iAllNum_ = 0;
	private $bHasAllNum_ = false;

	private $iPageNum_ = 0;
	private $iPos_ = 0;

	public function __construct($rsLocation="",$riListNum=100,$riLinkNum=5){
		$this->sLocation_ = $rsLocation;
		$this->iListNum_ = $riListNum;
		$this->iLinkNum_ = $riLinkNum;
	}

	public function setParams($raParams){
		$this->aParams_ = $raParams;
	}

	public function getLocation(){
		return $this->sLocation_;
	}

	public function setLocation($rsLocation){
		$this->sLocation_ = $rsLocation;
	}

	public function getPage(){
		return $this->iPage_;
	}

	public function getSort(){
		return $this->iSort_;
	}

	public function getTopRank(){
		return $this->iListNum_ * $this->iPage_ + 1;
	}

/*---------------------------------------------------------------------------*
 * Public Methods
 *---------------------------------------------------------------------------*/
	public function load(){
		if(isset($_GET['pg'])){
			$this->iPage_ = intval($_GET['pg']);
		}else if(array_key_exists('pg',$this->aParams_)){
			$this->iPage_ = intval($this->aParams_['pg']);
		}else if(HTTPUtil::isPost(self::PREFIX.'Page')){
			$this->iPage_ = HTTPUtil::getPostValue(self::PREFIX.'Page',DT_NUMERIC);
		}else{
			$this->iPage_ = intval($_SESSION[self::PREFIX.'Page']);
		}
		if(isset($_GET['sr'])){
			$this->iSort_ = intval($_GET['sr']);
		}else if(array_key_exists('sr',$this->aParams_)){
			$this->iSort_ = intval($this->aParams_['sr']);
		}else if(HTTPUtil::isPost(self::PREFIX.'Sort')){
			$this->iSort_ = HTTPUtil::getPostValue(self::PREFIX.'Sort',DT_NUMERIC);
		}else{
			$this->iSort_ = intval($_SESSION[self::PREFIX.'Sort']);
		}
	}

	public function save(){
		$_SESSION[self::PREFIX.'Page'] = $this->iPage_;
		$_SESSION[self::PREFIX.'Sort'] = $this->iSort_;
	}

	public function clear(){
		unset($_SESSION[self::PREFIX.'Page']);
		unset($_SESSION[self::PREFIX.'Sort']);
	}

	public function setCurrentPage($riPage){
		$this->iPage_ = $riPage;
	}

	public function hasAllNum(){
		return $this->bHasAllNum_;
	}

	public function setAllNum($riAllNum){
		$this->iAllNum_ = $riAllNum;
		$iMod = ($this->iAllNum_ % $this->iListNum_ != 0) ? 1:0;
		$this->iPageNum_ = floor($this->iAllNum_ / $this->iListNum_) + $iMod;
		$this->iPos_ = $this->iPage_ * $this->iListNum_;
		$this->bHasAllNum_ = true;
	}

	public function getSqlToken(){
		$sql = '';
		if($this->iListNum_ > 0) $token = 'limit '.$this->iPos_.','.$this->iListNum_;
		return $token;
	}

	public function getText(){
		$str = ($this->iListNum_ * $this->iPage_) + 1;
		if($this->iPageNum_ == 0) $str = 0;
		$end = $str + $this->iListNum_ - 1;
		if($end > $this->iAllNum_) $end = $this->iAllNum_;
		$page = ($this->iAllNum_ == 0) ? 0 : $this->iPage_ + 1;
		$text = $page.' '.SMSG('PR_W000').'（'.$str.' － '.$end.' ／ '.$this->iAllNum_.' '.SMSG('PR_W001').'）';
		return $text;
	}

	public function getTag(){
		$tag  = '<div style="float:right;">'."\n";
		$tag .= '<ul class="pagination pagination-sm">'."\n";
		$class1 = ' class="page-item"';$class2 = '';
		$prev = $this->iPage_ - 1;
		if($this->iPage_ == 0){
			$prev = 0;
			$class1 = ' class="page-item disabled"';
			$class2 = ' class="dfade2"';
		}
		$url = $this->sLocation_.'&pg='.$prev;
		$tag .= '<li'.$class1.'><a href="'.$url.'"'.$class2.'>&laquo;</a></li>'."\n";

		$offset = floor($this->iLinkNum_ / 2) * -1;
		if($this->iPage_ + $offset < 0){
			$offset = $this->iPage_ * -1;
		}else if($this->iPageNum_ <= $this->iLinkNum_){
			$offset = $this->iPage_ * -1;
		}else if($this->iPage_ - $offset >= $this->iPageNum_){
			$offset -= ($this->iPage_ - $offset - $this->iPageNum_ + 1);
		}
		$page = $this->iPage_ + 1;
		$cnt=0;
		while($cnt < $this->iLinkNum_){
			$crrt = $page + $offset;
			$offset++;
			if($crrt < 1) continue;
			$class1 = ' class="page-item"';$class2 = '';
			if($crrt == $page){
				$class1 = ' class="page-item active"';
				$class2 = ' class="dfade2"';
			}
			if($crrt > $this->iPageNum_){
				$class1 = ' class="page-item disabled"';
				$class2 = ' class="dfade2"';
			}
			$url = $this->sLocation_.'&pg='.($crrt-1);
			$tag .= '<li'.$class1.'><a href="'.$url.'"'.$class2.'>'.$crrt.'</a></li>'."\n";
			$cnt++;
		}
		$class1 = ' class="page-item"';$class2 = '';
		$next = $this->iPage_ + 1;
		if($this->iPage_+1 >= $this->iPageNum_){
			$next = $this->iPageNum_ - 1;
			$class1 = ' class="page-item disabled"';
			$class2 = ' class="dfade2"';
		}
		$url = $this->sLocation_.'&pg='.$next;
		$tag .= '<li'.$class1.'><a href="'.$url.'"'.$class2.'>&raquo;</a></li>'."\n";
		$tag .= '</ul>'."\n";
		$tag .= '</div>'."\n";
		return $tag;
	}
}
?>
