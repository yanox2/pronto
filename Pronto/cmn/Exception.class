<?php
/* Copyright 2013 dodat */
/*---------------------------------------------------------------------------*
 * Class - Exception
 *      共通例外
 *---------------------------------------------------------------------------*/
namespace PR;

class Exception extends \Exception{

	private $iCode_ = 0;
	private $sMessage_ = null;
	private $bFatal_ = false;

	private $sCaption_ = null;

	public function __construct($riCode,$rsMessage,$rbFatal=false){
		parent::__construct($rsMessage,$riCode);
		$this->iCode_ = $riCode;
		$this->sMessage_ = $rsMessage;
		$this->bFatal_ = $rbFatal;
		$str = 'Exp!:rc='.$this->iCode_.':'.$rsMessage;
		if($rbFatal){
			$dbtc = $this->getTrace();
			$trcs = array();
			if($dbtc){
				foreach($dbtc as $i=>$dbgs){
					if((array_key_exists('function',$dbgs))&&(strpos($dbgs['function'],'PR\\ELOG') !== false)) continue;
					if((array_key_exists('class',$dbgs))&&(strpos($dbgs['class'],'PR\\Trace') !== false)) continue;
					if((array_key_exists('class',$dbgs))&&(strpos($dbgs['class'],'PR\\Exception') !== false)) continue;
					if((array_key_exists('file',$dbgs))&&(strpos($dbgs['file'],'/system/core/') !== false)) continue;
					$trcs[$i] = $dbgs;
				}
			}
			$str = 'fatal:'.$str.':stack='.var_export($trcs,true);
		}
		//$level = SysEnv::getTraceLevel();
		if($riCode > -400) ELOG($str,$true,2);
	}

	public function setMessage($rsMessage){
		$this->sMessage_ = $rsMessage;
		$this->message = $rsMessage;
	}

	public function getCaption(){
		return $this->sCaption_;
	}

	public function setCaption($rsCaption){
		$this->sCaption_ = $rsCaption;
	}

	public function isFatalError(){
		return $this->bFatal_;
	}

	public function printStackTrace($riLevel=-1){
		$str = 'code='.$this->iCode_.',msg='.$this->sMessage_;
		$str .= ',trace='.var_export($this->getTrace(),true)."<br>\n";
		ELOG($str,true);
	}

	// parent methods
	// getMessage(), getCode(), getFile(), getLine(), getTrace(), getPrevious(), getTraceAsString()
}
?>
